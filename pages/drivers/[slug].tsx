// slug can be generated by transforming drivers name
// e.g. if driver.name = "Max Verstappen" then slug = "max-verstappen"

import { driverNameToSlug, slugToDriverName } from "../../utils/slug";
import { Driver } from "../../types";

import driverNames from "../../data/driverNames.json";

interface DriverPageProps {
  driver: Driver;
}

export default function DriverPage({ driver }: DriverPageProps) {
  return <h1>{driver.name}</h1>;
}

export async function getStaticPaths() {
  const slugs = driverNames.map(driverNameToSlug);
  return {
    paths: slugs.map((slug) => ({
      params: { slug },
    })),
    fallback: false,
  };
}

export async function getStaticProps({ params }: any) {
  const driverName = slugToDriverName(params.slug);
  const driverResp = await fetch(
    `https://api-formula-1.p.rapidapi.com/drivers?name=${encodeURIComponent(
      driverName
    )}`,
    {
      method: "GET",
      headers: {
        "X-RapidAPI-Key": process.env.RAPID_API_KEY as string,
        "X-RapidAPI-Host": "api-formula-1.p.rapidapi.com",
      },
    }
  );
  const driverRespData = await driverResp.json();
  const driver = driverRespData.response[0];
  return {
    props: {
      driver,
    },
  };
}
